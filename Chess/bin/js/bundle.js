var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _ChessScene = require("./script/ChessScene");

var _ChessScene2 = _interopRequireDefault(_ChessScene);

var _BoardSet = require("./script/component/BoardSet");

var _BoardSet2 = _interopRequireDefault(_BoardSet);

var _randomTouz = require("./script/component/randomTouz");

var _randomTouz2 = _interopRequireDefault(_randomTouz);

var _GridSet = require("./script/component/GridSet");

var _GridSet2 = _interopRequireDefault(_GridSet);

var _standMove = require("./script/component/standMove");

var _standMove2 = _interopRequireDefault(_standMove);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
				function GameConfig() {
								_classCallCheck(this, GameConfig);
				}

				_createClass(GameConfig, null, [{
								key: "init",
								value: function init() {
												//注册Script或者Runtime引用
												var reg = Laya.ClassUtils.regClass;
												reg("script/ChessScene.js", _ChessScene2.default);
												reg("script/component/BoardSet.js", _BoardSet2.default);
												reg("script/component/randomTouz.js", _randomTouz2.default);
												reg("script/component/GridSet.js", _GridSet2.default);
												reg("script/component/standMove.js", _standMove2.default);
								}
				}]);

				return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 1280;
GameConfig.height = 640;
GameConfig.scaleMode = "showall";
GameConfig.screenMode = "horizontal";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "main.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = true;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./script/ChessScene":3,"./script/component/BoardSet":6,"./script/component/GridSet":7,"./script/component/randomTouz":8,"./script/component/standMove":9}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		//根据IDE设置初始化引擎		
		if (window["Laya3D"]) Laya3D.init(_GameConfig2.default.width, _GameConfig2.default.height);else Laya.init(_GameConfig2.default.width, _GameConfig2.default.height, Laya["WebGL"]);
		Laya["Physics"] && Laya["Physics"].enable();
		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;
		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
		if (_GameConfig2.default.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
		if (_GameConfig2.default.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
		if (_GameConfig2.default.stat) Laya.Stat.show();
		Laya.alertGlobalError = true;

		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
		Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
	}

	_createClass(Main, [{
		key: "onVersionLoaded",
		value: function onVersionLoaded() {
			//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
			Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
		}
	}, {
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			//加载IDE指定的场景
			_GameConfig2.default.startScene && Laya.Scene.open(_GameConfig2.default.startScene);
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameData = require("./GameData");

var _GameData2 = _interopRequireDefault(_GameData);

var _BoardSet = require("./component/BoardSet");

var _BoardSet2 = _interopRequireDefault(_BoardSet);

var _GridSet = require("./component/GridSet");

var _GridSet2 = _interopRequireDefault(_GridSet);

var _randomTouz = require("./component/randomTouz");

var _randomTouz2 = _interopRequireDefault(_randomTouz);

var _standMove = require("./component/standMove");

var _standMove2 = _interopRequireDefault(_standMove);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChessScene = function (_Laya$Scene) {
    _inherits(ChessScene, _Laya$Scene);

    function ChessScene() {
        _classCallCheck(this, ChessScene);

        var _this2 = _possibleConstructorReturn(this, (ChessScene.__proto__ || Object.getPrototypeOf(ChessScene)).call(this));

        _this2.gmd = _GameData2.default.GetInstance();
        return _this2;
    }

    _createClass(ChessScene, [{
        key: "onEnable",
        value: function onEnable() {
            this.initAllPreSet();

            this.initSceneUI();
            this.initAllGrids();
            this.initAllChesses();

            this.initDebug();
        }
    }, {
        key: "initAllPreSet",
        value: function initAllPreSet() {
            this.preSet = this.Borad.getComponent(_BoardSet2.default);
        }
    }, {
        key: "initSceneUI",
        value: function initSceneUI() {}
    }, {
        key: "initAllGrids",
        value: function initAllGrids() {
            this.grids = [];

            var data = this.gmd.boradDatas;
            var count = data.count;
            var preset = this.preSet.gridPre;

            for (var i = 0; i < count; i++) {
                var gridObj = preset.create();
                var grid = {
                    com: gridObj,
                    ID: i,
                    data: data.random ? this.getRandomGrid(i) : data[i]
                };
                this.grids.push(grid);
                this.BoardContent.addChild(gridObj);

                gridObj.getComponent(_GridSet2.default).SetGridData(grid.data);
            }

            this.refreshContentScroll();
        }
    }, {
        key: "initAllChesses",
        value: function initAllChesses() {
            this.chesses = [];
            var preset = this.preSet.chessPre;

            for (var i = 0; i < this.gmd.gameConfig.maxPlayer; i++) {
                var chessObj = preset.create();
                var moveCom = chessObj.getComponent(_standMove2.default);

                var _this = this;
                moveCom.SetStandIndex(i);
                moveCom.SetCalcPos(function (index, id) {
                    var pos = _this.CalcPos(index);
                    var offPos = [50 + 50 * (id % 2), 60 + Math.floor(id / 2) * 80];
                    return [pos[0] + offPos[0], pos[1] + offPos[1]];
                });
                this.chesses.push({
                    id: i,
                    com: chessObj,
                    posIndex: 0,
                    score: 0,
                    move: moveCom,
                    isAI: i > 0
                });

                chessObj.zOrder = 20;

                this.BoardContent.addChild(chessObj);
            }

            this.curChess = 0;
            this.RefreshScore();

            this.getCurPlayer().move.GetCurrent();
        }
    }, {
        key: "getCurPlayer",
        value: function getCurPlayer() {
            return this.chesses[this.curChess];
        }
    }, {
        key: "getRandomGrid",
        value: function getRandomGrid(_index) {

            var moveFlag = Math.floor(Math.random() * 8);
            var scoreGet = 0;
            var desc = '';

            if (_index == 0) {
                moveFlag = 0;
                desc = '起点';
            } else if (_index == this.gmd.boradDatas.count - 1) {
                moveFlag = 0;
                desc = '终点';
            } else {
                if (moveFlag < 6) {
                    scoreGet = Math.floor(Math.random() * 6) * 500 - 1000;
                    if (scoreGet >= 0) scoreGet += 500;else scoreGet /= 2;
                    moveFlag = 0;
                    desc += "Score:" + scoreGet;
                } else {
                    moveFlag -= 5;
                    desc += moveFlag == 1 ? '前进' : '后退';
                }
            }

            var randRange = function randRange(max) {
                return Math.floor(Math.random() * max);
            };

            return {
                color: [randRange(255), randRange(255), randRange(255)],
                title: "Index" + _index,
                moveTag: moveFlag,
                scoreGet: scoreGet,
                func: function func(player) {},
                index: _index,
                desc: desc,
                pos: this.CalcPos(_index)
            };
        }
    }, {
        key: "CalcPos",
        value: function CalcPos(_index) {
            var width = this.gmd.boradDatas.width;
            var xOff = (width + 1) * 2;
            var yOff = width + 1;

            var y = Math.floor(_index / yOff) * 2 * 202 + 10;
            if ((_index + 1) % yOff == 0) {
                y += 202;
            }

            var x = 0;
            var xdir = _index % xOff;
            if (xdir < width) {
                x = xdir * 152 + 10;
            } else if (xdir == width) {
                x = xdir * 152 + 10 - 152;
            } else if (xdir > width && xdir < xOff - 1) {
                x = (2 * width - xdir) * 152 + 10;
            } else if (xdir == xOff - 1) {
                x = 10;
            }

            return [x, y];
        }
    }, {
        key: "refreshContentScroll",
        value: function refreshContentScroll() {
            var width = this.gmd.boradDatas.width;
            var count = this.gmd.boradDatas.count;
            var yOff = width + 1;

            this.BoardContent.width = width * 152 + 30;
            this.BoardContent.height = 630;
        }
    }, {
        key: "initDebug",
        value: function initDebug() {
            var _this3 = this;

            this.test.on(Laya.Event.CLICK, this, function () {
                _this3.test.visible = false;
                _this3.SightLockOn(_this3.getCurPlayer());
                _this3.RollDiceToMoveOn(true);
            });
        }
    }, {
        key: "RollDiceToMoveOn",
        value: function RollDiceToMoveOn(dir) {
            var _this4 = this;

            this.touz.getComponent(_randomTouz2.default).Action(this, function (score) {
                var curIndex = _this4.getCurPlayer().posIndex;

                var afIndex = curIndex;

                if (dir) {
                    afIndex = Math.min(_this4.gmd.boradDatas.count - 1, score + curIndex);
                } else {
                    afIndex = Math.max(0, curIndex - score);
                }

                var _this = _this4;
                _this4.getCurPlayer().move.MoveToPos(curIndex, afIndex, function (index, pass) {
                    _this.getCurPlayer().posIndex = index;
                    if (pass) {
                        _this.TriggerAtGrid(_this4.getCurPlayer(), index);
                    }
                    _this.SightLockOn(_this.getCurPlayer());
                });
            });
        }
    }, {
        key: "TriggerAtGrid",
        value: function TriggerAtGrid(player, _index) {
            var _this5 = this;

            var grid = this.grids[_index];

            var data = grid.data;

            if (data.scoreGet != 0) {
                player.score += data.scoreGet;
            } else if (data.moveTag == 1) {
                Laya.timer.once(500, this, function () {
                    _this5.RollDiceToMoveOn(true);
                });
                return;
            } else if (data.moveTag == 2) {
                Laya.timer.once(500, this, function () {
                    _this5.RollDiceToMoveOn(false);
                });
                return;
            }

            this.RefreshScore();
            this.NextPlayer();
        }
    }, {
        key: "RefreshScore",
        value: function RefreshScore() {
            this.Score.text = "" + this.getCurPlayer().score;
        }
    }, {
        key: "NextPlayer",
        value: function NextPlayer() {
            var _this6 = this;

            this.getCurPlayer().move.LoseCurrent();

            this.curChess++;
            this.curChess %= this.gmd.gameConfig.maxPlayer;

            this.getCurPlayer().move.GetCurrent();

            if (this.getCurPlayer().isAI) {
                Laya.timer.once(800, this, function () {
                    _this6.SightLockOn(_this6.getCurPlayer());
                    _this6.RollDiceToMoveOn(true);
                });
            } else {
                this.test.visible = true;
            }
        }
    }, {
        key: "SightLockOn",
        value: function SightLockOn(_player) {
            var _index = _player.posIndex;
            var yoff = this.CalcPos(_index)[1];
            var curScroll = this.BoardContent.vScrollBar.value;

            if (yoff < curScroll || yoff > curScroll + this.BoardContent.height - 150) this.BoardContent.vScrollBar.value = yoff - 10 - this.BoardContent.height / 2 + 100;
        }
    }]);

    return ChessScene;
}(Laya.Scene);

exports.default = ChessScene;

},{"./GameData":4,"./component/BoardSet":6,"./component/GridSet":7,"./component/randomTouz":8,"./component/standMove":9}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameData = function () {
    _createClass(GameData, null, [{
        key: "GetInstance",
        value: function GetInstance() {
            if (!GameData.instance) GameData.instance = new GameData();
            return GameData.instance;
        }
    }]);

    function GameData() {
        _classCallCheck(this, GameData);

        this.gameConfig = {
            maxPlayer: 4,
            AIFix: true,
            AICount: 3,
            curPlayer: 1
        };

        this.boradDatas = {
            count: 100,
            width: 6,
            random: true,
            datas: []
        };

        GameData.instance = this;
    }

    return GameData;
}();

exports.default = GameData;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
function load_map(obj, root, nameMap) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
        for (var _iterator = nameMap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var name = _step.value;

            obj[name] = root.getChildByName(name);
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally {
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally {
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
}

exports.default = load_map;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BoardSet = function (_Laya$Script) {
    _inherits(BoardSet, _Laya$Script);

    /** @prop {name:gridPre,tips:"棋盘预制",type:Prefab} */
    /** @prop {name:chessPre,tips:"棋子预制",type:Prefab} */

    function BoardSet() {
        _classCallCheck(this, BoardSet);

        return _possibleConstructorReturn(this, (BoardSet.__proto__ || Object.getPrototypeOf(BoardSet)).call(this));
    }

    return BoardSet;
}(Laya.Script);

exports.default = BoardSet;

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _nameMap = require("../addon/nameMap");

var _nameMap2 = _interopRequireDefault(_nameMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GridSet = function (_Laya$Script) {
    _inherits(GridSet, _Laya$Script);

    function GridSet() {
        _classCallCheck(this, GridSet);

        var _this = _possibleConstructorReturn(this, (GridSet.__proto__ || Object.getPrototypeOf(GridSet)).call(this));

        _this.showing = false;
        _this.GrdiData = {
            color: [255, 255, 255],
            title: "Hello",
            func: function func(player) {},
            moveTag: 0,
            scoreGet: 0,
            desc: "",
            index: 0,
            pos: [0, 0]
        };
        _this.colorDirty = false;
        return _this;
    }

    _createClass(GridSet, [{
        key: "onEnable",
        value: function onEnable() {
            (0, _nameMap2.default)(this, this.owner.content, ["title", "bg", "desc"]);
            this.refreshGrid();
            this.showing = true;
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            if (this.colorDirty && this.bg.filters) {
                this.colorFilter = this.bg.filters[0];
                var color = this.GrdiData.color;
                this.colorFilter.color(color[0], color[1], color[2]);
            }
        }
    }, {
        key: "SetGridData",
        value: function SetGridData(_data) {
            this.GrdiData = _data;
            if (this.showing) {
                this.refreshGrid();
            }
            this.colorDirty = true;
        }
    }, {
        key: "refreshGrid",
        value: function refreshGrid() {
            this.owner.pos(this.GrdiData.pos[0], this.GrdiData.pos[1]);
            this.title.text = this.GrdiData.title;
            this.desc.text = this.GrdiData.desc;
        }
    }]);

    return GridSet;
}(Laya.Script);

exports.default = GridSet;

},{"../addon/nameMap":5}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RandomTouzi = function (_Laya$Script) {
    _inherits(RandomTouzi, _Laya$Script);

    /** @prop {name:rollGap,tips:"骰子旋转周期",type:Int} */
    /** @prop {name:rollTime,tips:"骰子旋转时间",type:Int} */

    function RandomTouzi() {
        _classCallCheck(this, RandomTouzi);

        return _possibleConstructorReturn(this, (RandomTouzi.__proto__ || Object.getPrototypeOf(RandomTouzi)).call(this));
    }

    _createClass(RandomTouzi, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.rolling = false;
            this.number = 1;

            this.owner.texture = "image/" + this.number + ".png";

            Laya.timer.frameLoop(this.rollGap, this, function () {
                if (_this2.rolling) {
                    _this2.RandomOnce();
                }
            });
        }
    }, {
        key: "Action",
        value: function Action(caller, resFunc) {
            var _this3 = this;

            this.rolling = true;
            Laya.timer.once(this.rollTime, this, function () {
                _this3.rolling = false;
                resFunc.call(caller, _this3.number);
            });
        }
    }, {
        key: "RandomOnce",
        value: function RandomOnce() {
            this.number = this.number + Math.floor(Math.random() * 5);
            this.number %= 6;
            this.number += 1;

            this.owner.texture = "image/" + this.number + ".png";
        }
    }]);

    return RandomTouzi;
}(Laya.Script);

exports.default = RandomTouzi;

},{}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StandMove = function (_Laya$Script) {
    _inherits(StandMove, _Laya$Script);

    /** @prop {name:moveSpeed,tips:"移动速度",type:Int} */

    function StandMove() {
        _classCallCheck(this, StandMove);

        var _this = _possibleConstructorReturn(this, (StandMove.__proto__ || Object.getPrototypeOf(StandMove)).call(this));

        _this.calcPos = function (_index, _id) {
            return [0, 0];
        };
        _this.triggerFunc = function (index, pass) {};
        _this.stPos = 0;
        _this.edPos = 0;
        _this.targetPos = [0, 0];
        _this.movePace = [0, 0];
        _this.dir = 1;

        _this.index = 0;

        _this.current = false;
        _this.br = 0;
        return _this;
    }

    _createClass(StandMove, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            Laya.timer.frameLoop(1, this, function () {
                if (_this2.movePace[0] != 0 || _this2.movePace[1] != 0) _this2.owner.pos(_this2.owner.x + _this2.movePace[0], _this2.owner.y + _this2.movePace[1]);
            });

            Laya.timer.loop(100, this, function () {
                if (_this2.current) {
                    if (_this2.owner.filters) {
                        var filter = _this2.owner.filters[0];
                        var pbr = Math.sin(_this2.br) * 100;
                        _this2.br += 0.4;
                        var cbr = Math.sin(_this2.br) * 100;
                        filter.adjustBrightness(cbr - pbr);
                    }
                }
            });
        }
    }, {
        key: "SetCalcPos",
        value: function SetCalcPos(func) {
            this.calcPos = func;
            this.EnsurePlace();
        }
    }, {
        key: "SetStandIndex",
        value: function SetStandIndex(id) {
            this.index = id;
            this.owner.texture = "image/t" + id + ".png";
        }
    }, {
        key: "MoveToPos",
        value: function MoveToPos(stindex, edindex, reFunc) {
            this.stPos = stindex;
            this.edPos = edindex;
            this.triggerFunc = reFunc;

            this.dir = edindex > stindex ? 1 : -1;

            this.EnsurePlace();

            this.PaceOn();
        }
    }, {
        key: "PaceOn",
        value: function PaceOn() {
            var _this3 = this;

            var curPos = [this.owner.x, this.owner.y];
            if (this.edPos != this.stPos) {
                var targetPos = this.calcPos(this.stPos + this.dir, this.index);
                this.targetPos = targetPos;

                var xoff = this.targetPos[0] - curPos[0];
                var yoff = this.targetPos[1] - curPos[1];

                var distance = Math.sqrt(xoff * xoff + yoff * yoff);
                var timeCost = distance / this.moveSpeed;

                this.movePace = [this.moveSpeed * xoff / distance, this.moveSpeed * yoff / distance];

                Laya.timer.frameOnce(timeCost, this, function () {
                    _this3.stPos += _this3.dir;
                    _this3.EnsurePlace();
                    _this3.triggerFunc(_this3.stPos, _this3.stPos == _this3.edPos);
                    _this3.PaceOn();
                });
            } else {
                this.movePace = [0, 0];
                this.EnsurePlace();
            }
        }
    }, {
        key: "EnsurePlace",
        value: function EnsurePlace() {
            var targetPos = this.calcPos(this.stPos, this.index);
            this.owner.pos(targetPos[0], targetPos[1]);
        }
    }, {
        key: "GetCurrent",
        value: function GetCurrent() {
            this.current = true;
        }
    }, {
        key: "LoseCurrent",
        value: function LoseCurrent() {
            this.current = false;
            if (this.owner.filters) {
                var filter = this.owner.filters[0];
                filter.reset();
                this.br = 0;
            }
        }
    }]);

    return StandMove;
}(Laya.Script);

exports.default = StandMove;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
